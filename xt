#!/bin/bash
source ~/command/common

_oper=0
_reg=""
_func=""

function genrate_param_from_model() {
    if __mac ;then
        pbpaste|sed 's#:.*//#, //#'|pbcopy
    else
         cat /dev/clipboard|sed 's#:.*//#, //#' > /dev/clipboard
    fi
}

function genrate_param_without_comment() {
    if __mac ;then
        pbpaste|sed 's#\s*//.*$##'|sed 's/.* //'|pbcopy
    else
         cat /dev/clipboard|sed 's#\s*//.*$##'|sed 's/.* //' > /dev/clipboard
    fi
}

function genrate_param_for_one() {
    if __mac ;then
        pbpaste|sed 's#,#: 1,#'|pbcopy
    else
         cat /dev/clipboard|sed 's#\s*//.*$##'|sed 's/.* //' > /dev/clipboard
    fi
}

function genrate_param_for_js() {
    if __mac ;then
        pbpaste|sed "s#\(\w\+\)[,]*\s*\(//.*\)#\1: '', \2#"|pbcopy
    else
         cat /dev/clipboard|sed "s#\(\w\+\)[,]*\s*\(//.*\)#\1: '', \2#" > /dev/clipboard
    fi
}

function getSubmitComments() {
    str=""
    while read line;do
        str="${str}\`${line}\`,"
    done
	node -e " \
    var list = [${str}]; \
    var ret = list.filter(o=>o).map(o=>{ \
        var m = o.match(/(.*)(${_reg})(.*)/); \
        var f = ${_func}; \
        return !m ? o : m[1] + (typeof(f) === 'function' ? f(m[2]) : +m[2] + f) + m[3]; \
    }); \
	console.log(ret.join('\n')); \
	"
}

function add_for_number() {
    _reg="${1%:*}"
    _func="${1#*:}"
    if [ "$_reg:$_func" != "$1" ];then
        echo "格式：xt -a reg:num|str|func"
        exit
    fi
    if __mac ;then
        pbpaste|getSubmitComments|pbcopy
    else
         cat /dev/clipboard|getSubmitComments > /dev/clipboard
    fi
}

function show_help()
{
	local -a list
	list="help"
	list=("${list[@]}" "Usage :xt [OPTIONS]")
	list=("${list[@]}" "  -m: genrate param from model in clipboard")
	list=("${list[@]}" "  -p: genrate param without comment in clipboard")
	list=("${list[@]}" "  -o: genrate param add 1")
	list=("${list[@]}" "  -j: genrate param for js")
	list=("${list[@]}" "  -a: add num for regex match (reg:num|str|func, 注意\和=>需要反正成\\和=\>)")
	list=("${list[@]}" "  -h: show help")
	__msgbox "${list[@]}"
    exit
}

function main()
{
	local oper_right param
	oper_right=0

	if [ "$1" = "--help" ];then
		show_help
	fi

	while getopts :mpoja:h opt;do
		oper_right=1
		case $opt in
			m)_oper=1;;
			p)_oper=2;;
			o)_oper=3;;
			j)_oper=4;;
			a)_oper=5;param="$OPTARG";;
			*)show_help;;
		esac
	done

	case $_oper in
        1)genrate_param_from_model;;
		2)genrate_param_without_comment;;
        3)genrate_param_for_one;;
        4)genrate_param_for_js;;
        5)add_for_number "${param}";;
        *)show_help;;
	esac
}

main "$@"
