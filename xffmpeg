#!/bin/bash
#############################################
# author:fang
# version : v1.0
# name  : xffmpeg
# dispcripe: use of ffmpeg
# CopyRight@fangyunjiang[42550564@qq.com]
#############################################
source ~/command/common
_oper=0

function show_full_help() {
	echo "按照帧剪切视频图片"
	echo "ffmpeg -i 1.mp4 -vf \"select=between(n\,0\,10)\" -y -acodec copy 2.mp4"
	echo
	echo "按照帧生成图片"
	echo "ffmpeg -i 1.mp4 -vf \"select=between(n\,0\,2)\" -f image2 fang/%02d.jpg"
	echo
	echo "提取关键帧 eq(pict_type\,B) eq(pict_type\,P)"
	echo "ffmpeg -i 2.mp4 -vf select='eq(pict_type\,I)' -vsync 2 -f image2 fang/%02d.jpeg"
	echo
	echo "把视频5-10s和15-20s静音"
	echo "ffmpeg -i 1.mp4 -af \"volume=enable='between(t,5,10)':volume=0, volume=enable='between(t,15,20)':volume=0\" 2.mp4"
	echo
	echo "添加水印"
	echo "ffmpeg -i 2.mp4 -i logo.png -filter_complex \"overlay=W-w-5:H-h-5\" -codec:a copy -y 3.mp4"
	echo "ffmpeg -i 2.mp4 -i logo.png -filter_complex \"overlay=main_w-overlay_w-5:main_h-overlay_h-5\" -codec:a copy -y 3.mp4"
	echo
	echo "去除水印"
	echo "ffmpeg -i 3.mp4 -vf delogo=x=5:y=5:w=72:h=72 4.mp4"
	echo
	echo "视频或图像加上黑边pad, 原视频1920×1080，新视频2000x1160 40x2=2000-1920 40x2=1160-1080"
	echo "ffmpeg -i 2.mp4 -vf pad=2000:1160:40:40:black -y 3.mp4"
}

function cut_video()
{
	if [ $# != "4" ];then
		echo "参数错误，正确格式为：xffmpeg -c srcVideo startTime timeLong distVideo"
		exit
	fi
	echo ffmpeg -ss $2 -t $3 -accurate_seek -i "$1" -vcodec copy -acodec copy ${4} -y
	ffmpeg -ss $2 -t $3 -accurate_seek -i "$1" -vcodec copy -acodec copy ${4} -y
}
function join_video()
{
	local i n arr
	if [ $# -lt 3 ];then
		echo "参数错误，正确格式为：xffmpeg -j srcVideo1 srcVideo2 ..."
		exit
	fi
	n="$#"
	arr=("$@")
	echo "file ${arr[0]}" > .__video_list
	for ((i=1; i<n-1; i++));do
		echo "file ${arr[i]}" >> .__video_list
	done
	cat .__video_list
	echo ffmpeg -f concat -i .__video_list -c copy ${arr[i]} -y
	ffmpeg -f concat -i .__video_list -c copy ${arr[i]} -y
	rm .__video_list
}
function logo_video()
{
	local dist overlay
	if [ $# != "5" -a $# != "7" ];then
		echo "参数错误，正确格式为：xffmpeg -l video logo logoX logoY [logoWidth logoHeight] distVideo"
		exit
	fi
	if [ $# = "7" ];then
		echo ffmpeg -i $2 -s $5x$6 .__$2
		ffmpeg -i $2 -s $5x$6 .__$2
		dist="$7"
	else
		cp $2 .__$2
		dist="$5"
	fi
	if (($3<0));then
		if (($4<0));then
			overlay="W-w+$3:H-h+$4"
		else
			overlay="W-w+$3:$4"
		fi
	else
		if (($4<0));then
			overlay="$3:H-h+$4"
		else
			overlay="$3:$4"
		fi
	fi
	echo ffmpeg -i "$1" -vf "movie=.__$2[watermark];[in][watermark] overlay=$overlay[out]" "$dist" -y
	ffmpeg -i "$1" -vf "movie=.__$2[watermark];[in][watermark] overlay=$overlay[out]" "$dist" -y
	rm .__$2
}
function cover_video()
{
	local wh
	if [ $# != "3" ];then
		echo "参数错误，正确格式为：xffmpeg -r srcVideo srcImage distVideo"
		exit
	fi
	get_video_width_height $1 wh

	echo ffmpeg -i "$1" -i "$2" -filter_complex [1:v]scale=${wh}[ovrl],[0:v][ovrl]overlay=enable='between(n\,0\,1)' -y "$3"
	ffmpeg -i "$1" -i "$2" -filter_complex [1:v]scale=${wh}[ovrl],[0:v][ovrl]overlay=enable='between(n\,0\,1)' -y "$3"
	# 不计算宽度
	#ffmpeg -i 1.mp4 -i 1.png -filter_complex overlay=enable='between(n\,0\,1)' -y 2.mp4
	# 只添加封面
	#ffmpeg -i 1.mp4 -i 1.png -map 0 -map 1 -c copy -c:v:1 png -disposition:v:1 attached_pic -y 2.mp4
}
function set_contrast_brightness_video()
{
	if [ $# != "4" ];then
		echo "参数错误，正确格式为：xffmpeg -b srcVideo contrast brightness distVideo"
		exit
	fi
	echo ffmpeg -i $1 -vf eq=contrast=$2:brightness=$3 -y $4
	ffmpeg -i $1 -vf eq=contrast=$2:brightness=$3 -y $4
}
function get_video_time()
{
	local list sum var
	list=($(ffmpeg -i "$1" 2>&1|grep Duration| cut -d ' ' -f 4 | sed 's/\..*//'|sed 's/:/ /g'))
	if [ -z "$list" ];then
		echo "这不是一个视频文件"
		exit
	fi
	sum=0
	for var in "${list[@]}";do
		((sum=sum*60+var))
	done
	eval $2=$sum
}
function get_video_width_height()
{
	local ret
	ret=$(ffmpeg -i "$1" 2>&1|grep Stream.*Video|cut -d ',' -f 3|sed 's/x/:/'|sed 's/\s//g')
	eval $2="$ret"
}
function set_audio_video()
{
	local vtime atime n joinstr
	if [ $# != "3" ];then
		echo "参数错误，正确格式为：xffmpeg -a srcVideo srcAudio distVideo"
		exit
	fi
	get_video_time "$1" vtime
	get_video_time "$2" atime

	((n=(vtime-1)/atime+1))

	if ((n>1));then
		joinstr=""
		for ((i=0;i<n;i++));do
			joinstr="$joinstr $2"
		done
		join_video $joinstr __audio.mp3
	else
		cp "$2" __audio.mp3
	fi

	echo ffmpeg -i $1 -c:v copy -an __video.mp4
	ffmpeg -i $1 -c:v copy -an __video.mp4
	echo ffmpeg -i __video.mp4 -i __audio.mp3 -t $vtime -c copy -y $3
	ffmpeg -i __video.mp4 -i __audio.mp3 -t $vtime -c copy -y $3
	#ffmpeg -i __video.mp4 -i __audio.mp3 -t $vtime –vcodec copy –acodec copy -y $3

	rm __audio.mp3
	rm __video.mp4
}
function split_video_audio()
{
	if [ $# != "3" ];then
		echo "参数错误，正确格式为：xffmpeg -s srcVideo video|audio distFile"
		exit
	fi
	if [ "$2" = "video" ];then
		ffmpeg -i "$1" -vcodec copy -an "$3"
	elif [ "$2" = "audio" ];then
		ffmpeg -i "$1" -acodec copy -vn "$3"
	else
		echo "参数错误，正确格式为：xffmpeg -s srcVideo video|audio distFile"
	fi
}
function get_video_info()
{
	# ffprobe -select_streams v:0  -v quiet -show_streams -of json -i "$1"
	echo ffprobe -v quiet -select_streams v:0 -show_entries stream=nb_frames,width,height,duration -of default=nokey=0:noprint_wrappers=1 "$1"
	ffprobe -v quiet -select_streams v:0 -show_entries stream=nb_frames,width,height,duration -of default=nokey=0:noprint_wrappers=1 "$1"
}
function show_help()
{
	local -a list
	list="help"
	list=("${list[@]}" "Usage: xffmpeg [OPTIONS]")
	list=("${list[@]}" "  -l video logo logoX logoY [logoWidth logoHeight] distVideo: [设置logo -10 -10表示右下角] xffmpeg -l 1.mp4 1.jpg 10 10 [100 100] 2.mp4")
	list=("${list[@]}" "  -c srcVideo startTime timeLong distVideo: [剪切] xffmpeg -c 1.mp4 05 10 2.mp4")
	list=("${list[@]}" "  -j srcVideo1 srcVideo2 ... distVideo: [连接] xffmpeg -j 1.mp4 2.mp4")
	list=("${list[@]}" "  -r srcVideo srcImage distVideo: [封面] xffmpeg -r 1.mp4 1.png 2.mp4")
	list=("${list[@]}" "  -b srcVideo contrast brightness distVideo: [对比度亮度] xffmpeg -b 1.mp4 1.1 -0.1 2.mp4")
	list=("${list[@]}" "  -a srcVideo srcAudio distVideo: [添加音频] xffmpeg -a 1.mp4 1.mp3 2.mp4")
	list=("${list[@]}" "  -s srcVideo video|audio distFile: [分离音视频] xffmpeg -s 1.mp4 video 2.mp4")
	list=("${list[@]}" "  -i srcVideo: [查看视频信息]")
	list=("${list[@]}" "  -h: show help ")
	list=("${list[@]}" "  --help: show full help ")
	__msgbox "${list[@]}"
	exit
}


function main()
{
	__init_opts "$@"
	__check_opts "-h" && show_help
	__check_opts "--help" && show_full_help
	__check_opts "-c" && cut_video ${_args_[@]}
	__check_opts "-j" && join_video ${_args_[@]}
	__check_opts "-l" && logo_video ${_args_[@]}
	__check_opts "-r" && cover_video ${_args_[@]}
	__check_opts "-b" && set_contrast_brightness_video ${_args_[@]}
	__check_opts "-a" && set_audio_video ${_args_[@]}
	__check_opts "-s" && split_video_audio ${_args_[@]}
	__check_opts "-i" && get_video_info ${_args_[@]}
}

main "$@"
