#!/bin/bash

source ~/command/common
ip="192.168.0.190"
password=123
_remote_root=/root/whxx/
_oper=0
_name=""
_localpath="./"
_remotepath="${_remote_root}"

function xssh_enter()
{
	expect -c "
	set timeout 30000;
	spawn ssh root@${ip};
	expect {
		\"*password:\" {send \"${password}\r\"; exp_continue}
		\"*#\" {send \" cd  ${_remote_root}\r\"}
	}
	interact
	"
}
function xssh_push()
{
	[ -z "${_localpath}" ]&&return
	expect -c "
	set timeout 30000;
	spawn scp -r "${_localpath}" "root@${ip}:${_remotepath}"
	expect {
		\"*password:\" {send \"${password}\r\"}
	}
	interact
	"
}
function xssh_pull()
{
	[ -z "${_localpath}" ]&&return
	expect -c "
	set timeout 30000;
	spawn scp -r "root@${ip}:${_remotepath}" "${_localpath}"
	expect {
		\"*password:\" {send \"${password}\r\"}
	}
	interact
	"
}
function xssh_update_code()
{
	case ${_name} in
		server)xssh_update_server;;
		shop|client)xssh_update_web;;
		website|pdclient_wx|protocals|resource|share)xssh_update_static;;
	esac
}
function xssh_update_server()
{
	expect -c "
	set timeout 30000;
	spawn scp -r "/Users/$(whoami)/whxx/PDShopServer/tools/dist/${_name}.tar.gz" "root@${ip}:${_remote_root}${_name}/${_name}.tar.gz"
	expect {
		\"*password:\" {send \"${password}\r\"}
	}
	interact
	"
	expect -c "
	set timeout 30000;
	spawn ssh root@${ip};
	expect {
		\"*password:\" {send \"${password}\r\"; exp_continue}
		\"*#\" {send \" cd  ${_remote_root}${_name}\rtar zxf ${_name}.tar.gz\rrm -f ${_name}.tar.gz\rpm2 restart ${_name} --update-env\rexit\r\"}
	}
	interact
	"
}
function xssh_update_web()
{
	expect -c "
	set timeout 30000;
	spawn scp -r "/Users/$(whoami)/whxx/PDShopServer/tools/dist/${_name}.tar.gz" "root@${ip}:${_remote_root}${_name}/${_name}.tar.gz"
	expect {
		\"*password:\" {send \"${password}\r\"}
	}
	interact
	"
	expect -c "
	set timeout 30000;
	spawn ssh root@${ip};
	expect {
		\"*password:\" {send \"${password}\r\"; exp_continue}
		\"*#\" {send \" cd  ${_remote_root}${_name}\rrm -fr public\rtar zxf ${_name}.tar.gz\rrm -f ${_name}.tar.gz\rpm2 restart ${_name} --update-env\rexit\r\"}
	}
	interact
	"
}
function xssh_update_static()
{
	expect -c "
	set timeout 30000;
	spawn ssh root@${ip};
	expect {
		\"*password:\" {send \"${password}\r\"; exp_continue}
		\"*#\" {send \"rm -fr ${_remote_root}server/public/${_name}\rexit\r\"}
	}
	interact
	"
	if [ "${_name}" = "website" -o "${_name}" = "pdclient_wx" ];then
		expect -c "
		set timeout 30000;
		spawn scp -r "/Users/$(whoami)/whxx/PDShopServer/tools/dist/${_name}" "root@${ip}:${_remote_root}server/public/${_name}"
		expect {
			\"*password:\" {send \"${password}\r\"}
		}
		interact
		"
	else
		expect -c "
		set timeout 30000;
		spawn scp -r "../project/public/${_name}" "root@${ip}:${_remote_root}server/public/${_name}"
		expect {
			\"*password:\" {send \"${password}\r\"}
		}
		interact
		"
	fi
}
function show_help()
{
	local -a list
	list="xssh"
	list=("${list[@]}" "Usage: xssh [-s|-l|-u|-h]")
	list=("${list[@]}" "xssh: login ssh")
	list=("${list[@]}" "xssh -u [name]: update project code [server/shop/client/website/pdclient_wx/protocals/resource/share]")
	list=("${list[@]}" "xssh -s [local:remote]: push local file/dir to ssh server")
	list=("${list[@]}" "xssh -l [remote:local]: pull remote file/dir from ssh server to local")
	list=("${list[@]}" "xssh -c [config file]: set config file")
	list=("${list[@]}" "xssh -h: show help")
	__msgbox "${list[@]}"
}


function main()
{
	while getopts :s:l:u:c:ath opt;do
		case ${opt} in
			u)_oper=1; _name="$OPTARG";;
			s)_oper=2;_localpath="${OPTARG%%:*}";_remotepath="${OPTARG##*:}";;
			l)_oper=3;_remotepath="${OPTARG%%:*}";_localpath="${OPTARG##*:}";;
            a)_config_file="/Users/$(whoami)/account/ali_yun_config";;
            t)_config_file="/Users/$(whoami)/account/yilong_config";;
			c)_config_file="$OPTARG";;
			*)show_help;exit;;
		esac
	done
	if ! [ "${_localpath:0:1}" = "/" -o "${_localpath:0:1}" = "~" ];then
		_localpath="./${_localpath}"
	fi
	if ! [ "${_remotepath:0:1}" = "/" -o "${_remotepath:0:1}" = "~" ];then
		_remotepath="${_remote_root}${_remotepath}"
	fi

    if [ -n "${_config_file}" ];then
	    ip=`sed '/^public_ip=/!d;s/.*=//' ${_config_file}`
	    password=`sed '/^password=/!d;s/.*=//' ${_config_file}`
    fi

	case ${_oper} in
		0)xssh_enter;;
		1)xssh_update_code;;
		2)xssh_push;;
		3)xssh_pull;;
	esac
}

main "$@"
