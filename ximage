#!/usr/bin/env node

const fs = require("fs-extra");
const path = require("path");
const rl = require('readline');

function createBase64(imageFile, distFile) {
    const extname = path.extname(imageFile);
    if ([".png", ".jpg", ".gif"].indexOf(extname) === -1) {
        return console.log("文件格式只支持 png/jpg/gif");
    }
    let destExtname;
    if (distFile == 'html' || distFile == '.html') {
        const basename = path.basename(imageFile).replace(extname, '');
        const dirname = path.dirname(imageFile);
        distFile = path.join(dirname, basename+'.html');
        destExtname = '.html';
    } else if (distFile == 'js' || distFile == '.js') {
        const basename = path.basename(imageFile).replace(extname, '');
        const dirname = path.dirname(imageFile);
        distFile = path.join(dirname, basename+'.js');
        destExtname = '.js';
    } else {
        const destPath = path.dirname(distFile);
        destExtname = path.extname(distFile);
        if (destExtname !== '.html' && destExtname !== '.js') {
            return console.log("目标文件格式只支持 html/js");
        }
        fs.ensureDirSync(destPath);
    }

    const header = (destExtname==='.html' ? '<img src=' :'module.exports=')+'"data:image/'+extname.substr(1)+';base64,';
    let base64Buf = header+fs.readFileSync(imageFile).toString("base64")+'"';
    if (destExtname==='.html') {
        base64Buf += '>';
    } else {
        base64Buf += ';';
    }
    fs.writeFileSync(distFile, base64Buf);

    console.log("生成文件："+ distFile);
}
function replaceImageFileToBase64(htmlFile, distFile) {
    const srcPath = path.dirname(htmlFile);
    const lineReader = rl.createInterface({
        input: fs.createReadStream(htmlFile)
    });
    lineReader.on('line', function (line) {
        if (/src="[^ ]*"/.test(line)) {
            const filename = line.replace(/.*src="([^"]*)".*/, '$1');
            if (!/^https?:\/\//.test(filename)) {
                const extname = path.extname(filename);
                const basename = path.basename(filename);
                if ([".png", ".jpg", ".gif"].indexOf(extname) !== -1) {
                    const header = 'src="data:image/'+extname.substr(1)+';base64,'
                    const imageBuf = fs.readFileSync(path.resolve(srcPath, filename));
                    const base64 = header+imageBuf.toString("base64")+'"';
                    line = line.replace(/src="[^ ]*"/, base64);
                }
            }
        }
        fs.appendFileSync(distFile, line+'\n');
    });
    console.log(`已经将文件 ${htmlFile} 中的图片全部替换为base64到文件 ${distFile} 中`);
}

function main(srcFile, distFile) {
    if (srcFile === '-h' || srcFile === '--help') {
        console.log('1. 将图片转为base64文件，可以是文件夹，html文件或js文件，直接用html|js使用原来的文件名');
        console.log('   ximage src.jpg(.png|.gif) [xx/]dest.html(.js)|html|js]');
        console.log('2. 将html文件中的图片全部替换为base64');
        return console.log('   ximage src.html dest.html');
    }
    if (!fs.existsSync(srcFile)) {
        return console.log(`文件: ${srcFile} 不存在`);
    }
    const extname = path.extname(srcFile);
    if (extname === '.html') {
        replaceImageFileToBase64(srcFile, distFile);
    } else {
        createBase64(srcFile, distFile);
    }
}

main(...process.argv.slice(2));
